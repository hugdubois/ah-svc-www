// Code generated by protoc-gen-grpchan. DO NOT EDIT.
// source: pb/www.proto

package pb

import "github.com/fullstorydev/grpchan"
import "golang.org/x/net/context"
import "google.golang.org/grpc"

func RegisterHandlerWww(reg grpchan.ServiceRegistry, srv WwwServer) {
	reg.RegisterService(&_Www_serviceDesc, srv)
}

type wwwChannelClient struct {
	ch grpchan.Channel
}

func NewWwwChannelClient(ch grpchan.Channel) WwwClient {
	return &wwwChannelClient{ch: ch}
}

func (c *wwwChannelClient) Version(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := c.ch.Invoke(ctx, "/grpc.hugdubois.www.Www/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wwwChannelClient) ServicesStatus(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*ServicesStatusList, error) {
	out := new(ServicesStatusList)
	err := c.ch.Invoke(ctx, "/grpc.hugdubois.www.Www/ServicesStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wwwChannelClient) Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error) {
	out := new(EchoResponse)
	err := c.ch.Invoke(ctx, "/grpc.hugdubois.www.Www/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
