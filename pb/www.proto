syntax = "proto3";

option go_package = "github.com/hugdubois/ah-svc-www/pb;pb";
option java_package = "com.hugdubois.www.v1";
option objc_class_prefix = "GMPB";

package grpc.hugdubois.www;

import "google/api/annotations.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";
import "github.com/gomeet/go-proto-gomeetfaker/gomeetfaker.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.equal_all) = true;
option (gogoproto.populate_all) = true;
option (gogoproto.testgen_all) = true;
option (gogoproto.goproto_registration) = true; // for use grpc-gateway with gogo's generator the option goproto_registration is needed

service Www {
  // Version method receives no paramaters and returns a version message.
  rpc Version(EmptyMessage) returns (VersionResponse) {
    option (google.api.http) = {
      get: "/api/v1/version"
    };
  }

  // ServicesStatus method receives no paramaters and returns all services status message
  rpc ServicesStatus(EmptyMessage) returns (ServicesStatusList) {
    option (google.api.http) = {
      get: "/api/v1/services/status"
    };
  }

  // RsvpCreation attempts to create a new rsvp.
  rpc RsvpCreation(RsvpCreationRequest) returns (RsvpCreationResponse) {
    option (google.api.http) = {
      post: "/api/v1/rsvp_creation"
      body: "*"
    };
  }
}

message EmptyMessage {}

// VersionMessage represents a version message
message VersionResponse {
  // Id represents the message identifier.
  string name    = 1 [(gomeetfaker.field).app.name = true];
  string version = 2 [(gomeetfaker.field).app.version = true];
}

// SeviceStatus represents a sub services status message
message ServiceStatus {
  enum Status {
    OK          = 0;
    UNAVAILABLE = 1;
  }
  string name    = 1 [(gomeetfaker.field).app.name = true]; // name of service
  string version = 2 [(gomeetfaker.field).app.version = true]; // version of service
  Status status  = 3; // status of service see enum Status
  string e_msg   = 4 [(gomeetfaker.field).skip = true];; // error message can be empty
}

// ServicesStatusList is the sub services status list
message ServicesStatusList {
  repeated ServiceStatus services = 1;
}

// RsvpCreationRequest encodes the request of a rsvp creation operation.
message RsvpCreationRequest {
  string names             = 1 [(gomeetfaker.field).lorem.words.num = 6, (validator.field) = {length_gt: 1, length_lt: 256}]; // names free this is a string field
  string email             = 2 [(gomeetfaker.field).internet.email = true, (validator.field) = {human_error: "Invalid email", regex: "^[a-zA-Z0-9.!#$%&'*+/=?^_{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$"}]; // email contact valid email
  bool   presence          = 3 [(gomeetfaker.field).value.content = "true"]; // presence is a boolean that indicate the people behind this rsvp are present
  string children_name_age = 4 [(gomeetfaker.field).lorem.words.num = 6, (validator.field) = {length_lt: 256}]; // names and ages of children this is a free string field
  bool   housing           = 5 [(gomeetfaker.field).value.content = "true"]; // housing is boolean that indicate the people behind this rsvp use housing
  string music             = 6 [(gomeetfaker.field).lorem.words.num = 6, (validator.field) = {length_lt: 256}]; // wanted music this is a free string field
  bool   brunch            = 7 [(gomeetfaker.field).value.content = "true"]; // brunch is boolean that indicate the people behind this rsvp are present in sunday brunch
}

// RsvpCreationResponse encodes the result of a rsvp creation operation.
message RsvpCreationResponse {
  bool ok = 1 [(gomeetfaker.field).value.content = "1"]; // indicates whether the operation was successful
}
